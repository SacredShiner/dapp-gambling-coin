/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { Game } from "../Game";

export class Game__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Game> {
    return super.deploy(overrides || {}) as Promise<Game>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Game {
    return super.attach(address) as Game;
  }
  connect(signer: Signer): Game__factory {
    return super.connect(signer) as Game__factory;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Game {
    return new Contract(address, _abi, signerOrProvider) as Game;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract Gambler",
        name: "winner",
        type: "address",
      },
    ],
    name: "gameFinished",
    type: "event",
  },
  {
    inputs: [],
    name: "betAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "finished",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract Gambler",
        name: "gambler",
        type: "address",
      },
    ],
    name: "play",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "player1",
    outputs: [
      {
        internalType: "contract Gambler",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "player2",
    outputs: [
      {
        internalType: "contract Gambler",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract Gambler",
        name: "gambler",
        type: "address",
      },
    ],
    name: "start",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "winner",
    outputs: [
      {
        internalType: "contract Gambler",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526127106000556002805460ff1916905534801561002057600080fd5b50610764806100306000396000f3fe60806040526004361061007b5760003560e01c8063d30895e41161004e578063d30895e414610121578063dd0b281e14610146578063dfbf53ae1461015b578063e492814f1461017b5761007b565b806359a5f12d146100805780639b2cb5d8146100bd578063bef4876b146100e1578063d24257c01461010b575b600080fd5b34801561008c57600080fd5b506003546100a0906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156100c957600080fd5b506100d360005481565b6040519081526020016100b4565b3480156100ed57600080fd5b506002546100fb9060ff1681565b60405190151581526020016100b4565b34801561011757600080fd5b506100d360015481565b34801561012d57600080fd5b506002546100a09061010090046001600160a01b031681565b610159610154366004610695565b61018e565b005b34801561016757600080fd5b506004546100a0906001600160a01b031681565b610159610189366004610695565b61024e565b60005434101561020b5760405162461bcd60e51b815260206004820152602c60248201527f596f75206861766520746f20626574206d6f7265207468616e20746865206d6960448201527f6e696d756d20616d6f756e74000000000000000000000000000000000000000060648201526084015b60405180910390fd5b600280546001600160a01b03909216610100027fffffffffffffffffffffff0000000000000000000000000000000000000000ff90921691909117905534600155565b60025460ff16156102a15760405162461bcd60e51b815260206004820152601060248201527f47616d652069732066696e6973686564000000000000000000000000000000006044820152606401610202565b60025461010090046001600160a01b03166102fe5760405162461bcd60e51b815260206004820152601260248201527f53746172746572206973206e6f742073657400000000000000000000000000006044820152606401610202565b806001600160a01b031663767800de6040518163ffffffff1660e01b815260040160206040518083038186803b15801561033757600080fd5b505afa15801561034b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061036f9190610672565b6001600160a01b0316600260019054906101000a90046001600160a01b03166001600160a01b031663767800de6040518163ffffffff1660e01b815260040160206040518083038186803b1580156103c657600080fd5b505afa1580156103da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103fe9190610672565b6001600160a01b031614156104555760405162461bcd60e51b815260206004820152601a60248201527f506c6179657220616c726561647920696e207468652067616d650000000000006044820152606401610202565b60015434146104a65760405162461bcd60e51b815260206004820152601f60248201527f596f75206861766520746f2073656e64207468652062657420616d6f756e74006044820152606401610202565b6002805460ff19166001178155600380546001600160a01b03841673ffffffffffffffffffffffffffffffffffffffff199091161790556000906104e861062a565b6104f291906106c5565b905060ff8116610530576003546004805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03909216919091179055610566565b600254600480546101009092046001600160a01b031673ffffffffffffffffffffffffffffffffffffffff199092169190911790555b600480546040517fe7c974a800000000000000000000000000000000000000000000000000000000815230928101929092526001600160a01b03169063e7c974a89047906024016000604051808303818588803b1580156105c657600080fd5b505af11580156105da573d6000803e3d6000fd5b50506004546040516001600160a01b0390911681527f81e97563510fc38d40a27c898055562062927ad214b195ca16800560a58848759350602001915061061e9050565b60405180910390a15050565b600060fb424460405160200161064a929190918252602082015260400190565b6040516020818303038152906040528051906020012060001c61066d91906106b1565b905090565b600060208284031215610683578081fd5b815161068e81610716565b9392505050565b6000602082840312156106a6578081fd5b813561068e81610716565b6000826106c0576106c06106e7565b500690565b600060ff8316806106d8576106d86106e7565b8060ff84160691505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6001600160a01b038116811461072b57600080fd5b5056fea26469706673582212208b22ac388e99aff9782b1fbac6bd129bed18ba07838d0b6bebd029df2e6bb1d764736f6c63430008030033";
